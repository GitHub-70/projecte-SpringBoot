#server
server:
  port: 8082
  servlet:
   context-path: /
  tomcat:
    threads:
      max: 128
    uri-encoding: UTF-8
#spring
spring:
  datasource:
    url: jdbc:mysql://192.168.137.1:3306/dbms?serverTimezone=GMT%2B8&characterEncoding=utf8
    username: root
    # 判断是否是由ENC()包裹，是则为加密的字符串，否则为明文 启动参数：-Djasypt.encryptor.password=123456
    password: ENC(kbeZ+4fP+V1uoTE/KgXj2qeqfh4jmwU5)
    hikari:
      maximum-pool-size: 50
  thymeleaf:
    cache: false
    prefix: classpath:/templates/pages/
    suffix: .html
  aop:
    #2.0版本及以后：false表示为目标对象基于JDK方式产生代理对象，不配置此项，或为true均使用cglib方式产生代理对象
#    proxy-target-class: false
    proxy-target-class: true
  task:
    execution:
      pool:
        core-size: 8
        max-size: 128
        keep-alive: 60000
        queue-capacity: 256
      thread-name-prefix: db-service-thread-

## sql 日志
#  jpa:
#    # 启用 SQL 日志
#    show-sql: true
#    properties:
#      hibernate:
#        # 格式化输出的 SQL 日志
#        format_sql: true


#mybatis
mybatis:
  mapper-locations:
  - classpath:/mapper/*/*.xml
#shiro 配置新的玩法
shiro:
  loginUrl: /doLoginUI
  rememberMeManager:
          cookie:
            name: shiroRememberMe
            maxAge: 3600  #单位秒
            path: /
  userNativeSessionManager: true
  sessionManager:
    sessionIdUrlRewritingEnabled: false

#log
logging:
  level:
    com.cy: debug
    springfox: error

management:
  endpoints:
    web:
      exposure:
        include:
        - "*"
jasypt:
  encryptor:
    # 用来加解密的salt值
    # 若防止暴露加密的秘钥，不配置该秘钥，在项目启动时加入参数：-Djasypt.encryptor.password=123456
    # 因为在配置文件中缺少了jasypt.encryptor.password，因此使用Maven打包时会出错
    # 在Maven打包配置中加上参数即可：-Djasypt.encryptor.password=123456
#    password: 123456
    # 加密算法
    algorithm: PBEWithMD5AndDES
    # 用来使用新的算法，默认为org.jasypt.salt.NoOPIVGenerator,这样的话我们就无法使用命令行中生成的密文
#    iv-generator-classname: org.jasypt.salt.RandomIVGenerator
    # 显示的指定自定义加密器(与配置类定义bean的名称一致)
#    bean: encryptorConfig


swagger:
  enable: true


